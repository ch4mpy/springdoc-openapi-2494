package com.c4soft;

import java.util.Objects;

import org.springframework.core.convert.converter.Converter;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.annotation.JsonValue;

import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;

@RestController
public class DemoController {

    @GetMapping("/demo")
    public Dto getDemo(@Valid Dto dto) {
        return dto;
    }

    public static record Dto(@NotNull EnumSerializedByName name, @NotNull EnumSerializedByToString str) {
    }

    /**
     * Enum reproducing the bug reported in https://github.com/springdoc/springdoc-openapi/issues/2494
     */
    public static enum EnumSerializedByName {
        A("machin"), B("truc");

        String label;

        EnumSerializedByName(String label) {
            this.label = label;
        }

        @Override
        public String toString() {
            return label;
        }
    }

/**
 * What it takes to have an enum serialized and deserialized as per the OpenAPI specs generated by springdoc-openapi
 */
public static enum EnumSerializedByToString {
    A("bidule"), B("chose");

    String label;

    EnumSerializedByToString(String label) {
        this.label = label;
    }

    @Override
    @JsonValue // Forces serialization using toString()
    public String toString() {
        return label;
    }

    /**
     * Inverse operation for the toString() method 
     * @param str the serialized value of the enum
     * @return deserialized enum value
     */
    public static EnumSerializedByToString fromString(String str) {
        for (final var e : EnumSerializedByToString.values()) {
            if (Objects.equals(e.toString(), str)) {
                return e;
            }
        }
        return null;
    }

    /**
     * Register a Spring converter for request params mapped to EnumSerializedByToString
     */
    @Component
    static class StringEnumSerializedByToStringConverter implements Converter<String, EnumSerializedByToString> {
        @Override
        public EnumSerializedByToString convert(String source) {
            return EnumSerializedByToString.fromString(source);
        }
    }
}
}
